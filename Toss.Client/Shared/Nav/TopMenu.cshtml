@inject IHttpApiClientRequestBuilderFactory ClientFactory;
@inject IAccountService AccountService
<nav class="navbar navbar-expand-lg navbar-light bg-light mb-2">
    <a class="navbar-brand" href="#"></a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav">
            <li class="nav-item active">
                <NavLink class="nav-link btn btn-sm " href="/" Match="NavLinkMatch.All">
                    KIN TOSS Board
                </NavLink>
            </li>
            <li class="nav-item active">
                <NavLink class="nav-link btn btn-sm " href="/kin" Match="NavLinkMatch.All">
                    Market place
                </NavLink>
            </li>
            @if (account != null)
            {
                <li class="nav-item">
                    <NavLink class="nav-link btn btn-sm " href="/account" Match="NavLinkMatch.Prefix">
                        Account
                    </NavLink>
                </li>
            }
            else
            {
                <li class="nav-item">
                    <NavLink class="nav-link btn btn-sm " href="/login" Match="NavLinkMatch.Prefix">
                        Login
                    </NavLink>
                </li>
            }
            @if (account != null && account.IsAdmin)
            {
                <li class="nav-item">
                    <NavLink class="nav-link btn btn-sm " href="/admin" Match="NavLinkMatch.Prefix">
                        Admin
                    </NavLink>
                </li>
            }
            <li class="nav-item">
                <a href="https://github.com/RemiBou/remibou.github.io/blob/master/ABOUT.md" class="nav-link btn btn-sm " target="_blank">
                    About
                </a>
            </li>
            @if (account != null)
            {
                <li class="nav-item">
                    <a href="#" id="LinkLogout" class="nav-link btn btn-sm " onclick="@(async () => await LogOff())">
                        Signout
                    </a>
                </li>
            }
            </ul>
    </div>
</nav>
@functions {
    AccountViewModel account;
    protected override async Task OnInitAsync()
    {
        AccountService.OnLoginDone += async (s, e) =>
        {
            account = await AccountService.CurrentAccount();
            StateHasChanged();
        };
        AccountService.OnLogoutDone += (s, e) =>
        {
            account = null;
            StateHasChanged();
        };
        account = await AccountService.CurrentAccount();
        StateHasChanged();
    }
    protected async Task LogOff()
    {
        await AccountService.Logout();

    }
}

